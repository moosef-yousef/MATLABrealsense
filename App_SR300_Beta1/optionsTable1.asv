function buildCompleteParamList(app)
    % get device options list
    rsoptions = fieldnames(app.rsEnum.rs_option);
    dev_opt_desc = rsoptions;
    rsoptionscount = numel(rsoptions);

    dev_opt_current = zeros(rsoptionscount, 1);
    opt_min = zeros(rsoptionscount, 1);
    opt_max = zeros(rsoptionscount, 1);
    opt_step = zeros(rsoptionscount, 1);
    optsupported = zeros(rsoptionscount, 1);

    for i = 1:rsoptionscount
        app.opt = app.rsoptions{i};

        %[app.dev, ~, err] = calllib('realsense', 'rs_reset_device_options_to_default', app.dev, app.opt, 1, rs_error);
        %rs_check_error(err);   


        [app.optsupported(i), ~, err] = calllib('realsense', 'rs_device_supports_option', app.dev{app.selectdev}, app.opt, app.err);
        rs_check_error(app.err);

        [app.dev_opt_desc{i}, ~, err] = calllib('realsense', 'rs_get_device_option_description', app.dev{app.selectdev}, app.opt, app.err);
        rs_check_error(app.err);

        [app.dev_opt_current(i), ~, err] = calllib('realsense', 'rs_get_device_option', app.dev{app.selectdev}, app.opt, app.err);
        rs_check_error(app.err);

        [~,  opt_min(i), opt_max(i), opt_step(i), app.err] = calllib( ...
            'realsense', 'rs_get_device_option_range', ...
             app.dev{app.selectdev}, app.opt, ...
             opt_min(i), opt_max(i), opt_step(i), ...
             rs_error);
        rs_check_error(app.err);
    end

    RSOptionsFINAL = [app.rsoptions, app.dev_opt_desc, num2cell(app.dev_opt_current), num2cell(app.opt_min), ...
        num2cell(app.opt_max), num2cell(app.opt_step), num2cell(app.optsupported)];
end
